# File Name: highlyDivisibleTriangularNumber.py
# Author: Esther Heralta Espinosa
# Date: 04/07/19
# Description of the program: The sequence of triangle numbers is generated by adding the natural numbers.
#							  So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
#							  The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#							  Let us list the factors of the first seven triangle numbers:
#								 1: 1
#								 3: 1,3
#								 6: 1,2,3,6
#								10: 1,2,5,10
#								15: 1,3,5,15
#								21: 1,3,7,21
#								28: 1,2,4,7,14,28
#							  We can see that 28 is the first triangle number to have over five divisors.
#							  What is the value of the first triangle number to have over one hundred divisors?

MAX_DIVISORS = 100

from functools import reduce

def getTriangleNumber(number):
	""" returns the triangle number
		the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
	"""
	#generates a list from 1 to 7 and sum all the numbers of the list
	adding = reduce((lambda x, y: x + y), [x for x in range(1, number + 1)]) 
	return adding

def getFactorsOfNumber(number):
	""" returns a list with the factors of a the given number
		7: 1, 7
		8: 1, 2, 4, 8
	"""
	factorsList = [1, number]
	for divisor in range (2, number):
		if (number % divisor) == 0: #it is divisible
			factorsList.append(divisor)

	factorsList.sort() #ordering the list
	return factorsList

def getDivisorsNumber(number):
	""" returns the number of divisors (or factors) that the given number has
		8: 1, 2, 4, 8 ==> returns 4
		7: 1, 7 ==> returns 2
	"""
	factorsList = getFactorsOfNumber(number)
	return len(factorsList)


def main():

	divisors = 0 #numbers of divisors of a number
	triangleNumber = 0
	number = 2 #number to check
	exit = False
	while not exit:
		triangleNumber = getTriangleNumber(number)
		divisors = getDivisorsNumber(triangleNumber)
		if divisors > MAX_DIVISORS:
			exit = True
		number += 1

	print("\nThe value of the first triangle number to have over {0} divisors is: {1}\n".format(MAX_DIVISORS, triangleNumber))

if __name__ == "__main__":
	main()
