# File Name: evenFibonacciSum.py
# Author: Esther Heralta Espinosa
# Date: 04/05/19
# Description of the program: Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
#			      By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#			      By considering the terms in the Fibonacci sequence whose values do not exceed 4000000, 
#			      find the sum of the even-valued terms.

MAX = 4000000 #constant

def isEven(number):
	""" returns true if the given number is even """
	return (number % 2 == 0)

def fibonacci(number):
	""" returns the fibonacci number of the given number """
	""" by starting with 1 and 2"""
	if (number == 1): #fibonacci(1) = 1
		return (1)
	elif (number == 2): #fibonacci(2) = 2
		return (2)
	else:
		return (fibonacci(number - 1) + fibonacci(number - 2))

def getListOfFibonacciEvenNumbers (numbers):
	""" returns a list with the Fibonacci Sequence of even numbers """
	number = 1
	fiboNumber = fibonacci(number)
	while fiboNumber <= MAX:	
		#print("number: {0}, fiboNumber: {1}".format(number, fiboNumber))	
		if isEven(fiboNumber):
			numbers.append(fiboNumber)
		number = number + 1
		fiboNumber = fibonacci(number)

	return (numbers)

def main():
	numbers = [] #list that contains fibonacci sequence numbers that are even

	numbers = getListOfFibonacciEvenNumbers (numbers)

	print("\nFibonacci Sequence of even numbers: {0}".format(numbers))

	print("Sum of the even valued terms: {0}\n".format(sum(numbers)))

if __name__ == "__main__":
	main()
